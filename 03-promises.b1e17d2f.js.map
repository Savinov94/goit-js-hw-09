{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAOF,SAASG,cAAc,SAC9BC,EAAaF,EAAKC,cAAc,uBAChCE,EAAYH,EAAKC,cAAc,sBAC/BG,EAAcJ,EAAKC,cAAc,wBAEvCI,eAAeC,EAAcC,EAAUC,GACrC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACT,MAAMC,EAAgB,C,SAAET,E,MAAUC,GAE9BI,EACFF,EAAQM,GAERL,EAAOK,EAAc,GAEtBR,EAAM,G,CAIbR,EAAKD,iBAAiB,UAAUM,MAAOY,IACrCA,EAAMC,iBAEN,IAAIV,EAAQW,SAASjB,EAAWkB,OAChC,MAAMC,EAAOF,SAAShB,EAAUiB,OAC1BE,EAASH,SAASf,EAAYgB,OAEpC,GAAIG,MAAMf,IAAUe,MAAMF,IAASE,MAAMD,IAAWd,EAAQ,GAAKa,EAAO,GAAKC,GAAU,EACrFE,MAAM,+DAIR,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,IAAK,CAChC,IACE,MAAMC,QAAepB,EAAcmB,EAAGjB,GACtCmB,QAAQC,IAAI,uBAAqBF,EAAInB,eAAoBmB,EAAElB,U,CAC3D,MAAOqB,GACPF,QAAQC,IAAI,sBAAoBC,EAAEtB,eAAmBsB,EAAErB,U,CAGzDA,GAASa,C,IAEX","sources":["src/js/03-promises.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stepInput = form.querySelector('input[name=\"step\"]');\n  const amountInput = form.querySelector('input[name=\"amount\"]');\n\n  async function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        const promiseResult = { position, delay };\n\n        if (shouldResolve) {\n          resolve(promiseResult);\n        } else {\n          reject(promiseResult);\n        }\n      }, delay);\n    });\n  }\n\n  form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    let delay = parseInt(delayInput.value);\n    const step = parseInt(stepInput.value);\n    const amount = parseInt(amountInput.value);\n\n    if (isNaN(delay) || isNaN(step) || isNaN(amount) || delay < 0 || step < 0 || amount <= 0) {\n      alert('Please enter valid values for delay, step, and amount.');\n      return;\n    }\n\n    for (let i = 1; i <= amount; i++) {\n      try {\n        const result = await createPromise(i, delay);\n        console.log(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      } catch (error) {\n        console.log(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n      }\n\n      delay += step;\n    }\n  });\n});"],"names":["document","addEventListener","form","querySelector","delayInput","stepInput","amountInput","async","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","promiseResult","event","preventDefault","parseInt","value","step","amount","isNaN","alert","i","result","console","log","error"],"version":3,"file":"03-promises.b1e17d2f.js.map"}